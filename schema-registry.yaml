AWSTemplateFormatVersion: '2010-09-09'
Description: Kafka

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Tags. The metadata that you apply to the resources.
        Parameters:
          - App
          - Owner

Parameters:
  App:
    Type: String

  Owner:
    Type: String

  AvailabilityZonesCount:
    Description: Number of availability zones to span.
    Default: 3
    Type: Number
    AllowedValues: [ 1, 3 ]

  TaskExecutionRole:
    Description: >
      The Amazon Resource Name (ARN) of the task execution role
      that grants the Amazon ECS container agent permission
      to make AWS API calls on your behalf.
    Type: String

  VPC:
    Description: Choose existing VPC
    Type: AWS::EC2::VPC::Id

  PrivateSubnets:
    Description: Choose which subnets this ECS cluster should be deployed to
    Type: List<AWS::EC2::Subnet::Id>

  Cluster:
    Type: String

  CloudMap:
    Type: String

  CloudWatchLogsGroup:
    Type: String

  TemplatesBucket:
    Description: Specify ON-AWS S3 Bucket
    Type: String
    Default: on-aws-us-east-1-master

Conditions:
  SecondZone:
    Fn::Or:
      - Fn::Equals: [!Ref AvailabilityZonesCount, 2]
      - Fn::Equals: [!Ref AvailabilityZonesCount, 3]
  ThirdZone:
    Fn::Equals: [!Ref AvailabilityZonesCount, 3]

Resources:
  ServiceDiscoveryEntry:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      Description: '"schema-registry" service discovery entry in Cloud Map'
      DnsConfig:
        DnsRecords:
          - Type: A
            TTL: 30
        RoutingPolicy: MULTIVALUE
      Name: schema-registry
      NamespaceId: !Ref CloudMap

  ################################################################################
  # Task Security
  ################################################################################
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Group for ECS Kafka Tasks
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8081
          ToPort: 8081
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: App
          Value: !Ref App
        - Key: Owner
          Value: !Ref Owner

  SecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: all traffic inside security group
      GroupId: !Ref SecurityGroup
      IpProtocol: -1
      FromPort: -1
      ToPort: -1
      SourceSecurityGroupId: !Ref SecurityGroup

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Name: schema-registry
          Essential: true
          Image: confluentinc/cp-schema-registry:latest
          PortMappings:
            - ContainerPort: 8081
              HostPort: 8081
              Protocol: tcp
          Environment:
            - Name: SCHEMA_REGISTRY_HOST_NAME
              Value: schema-registry.${Cluster}
            - Name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
              Value: !Sub kafka1.${Cluster},kafka2.${Cluster},kafka3.${Cluster}
            - Name: SCHEMA_REGISTRY_LISTENERS
              Value: http://0.0.0.0:8081
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudWatchLogsGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: on-aws
      Cpu: "256"
      ExecutionRoleArn: !Ref TaskExecutionRole
      Family: schema-registry
      Memory: "512"
      NetworkMode: awsvpc

  Service:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref Cluster
      DeploymentConfiguration:
        MinimumHealthyPercent: 33
      DeploymentController:
        Type: ECS
      DesiredCount: !Ref AvailabilityZonesCount
      LaunchType: EC2
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets: !Ref PrivateSubnets
          SecurityGroups:
            - !Ref SecurityGroup
      PropagateTags: SERVICE
      SchedulingStrategy: REPLICA
      PlacementStrategies:
        - Type: spread
          Field: attribute:ecs.availability-zone
      TaskDefinition:
        Ref: TaskDefinition
      ServiceRegistries:
        - RegistryArn: !GetAtt ServiceDiscoveryEntry.Arn
      Tags:
        - Key: App
          Value: !Ref App
        - Key: Owner
          Value: !Ref Owner
