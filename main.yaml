AWSTemplateFormatVersion: '2010-09-09'
Description: Kafka Cluster

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Tags. The metadata that you apply to the resources.
        Parameters:
          - App
          - Owner

Parameters:
  App:
    Type: String
    Default: kafka

  Owner:
    Type: String

  AvailabilityZonesCount:
    Description: Number of availability zones to span.
    Default: 3
    Type: Number
    AllowedValues: [ 1, 3 ]

  TemplatesBucket:
    Description: Specify ON-AWS S3 Bucket
    Type: String
    Default: on-aws-us-east-1-master

Resources:
  ################################################################################
  # INFRASTRUCTURE
  ################################################################################
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplatesBucket}/vpc/template.yaml
      Parameters:
        App: !Ref App
        Owner: !Ref Owner
        AvailabilityZonesCount: !Ref AvailabilityZonesCount

  CLUSTER:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplatesBucket}/ecscluster/main.yaml
      Parameters:
        App: !Ref App
        Owner: !Ref Owner
        AvailabilityZonesCount: !Ref AvailabilityZonesCount
        TasksPerAvailabilityZone: 3
        VPC: !GetAtt VPC.Outputs.VPC
        PrivateSubnets: !GetAtt VPC.Outputs.PrivateSubnets

  ################################################################################
  # COMMON
  ################################################################################
  CloudWatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub ${App}/${CLUSTER.Outputs.Cluster}/tasks/kafka
      RetentionInDays: 7

  CloudMap:
    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
    Properties:
      Description: Service Map for Kafka
      Name: !GetAtt CLUSTER.Outputs.Cluster
      Vpc: !GetAtt VPC.Outputs.VPC
      Tags:
        - Key: App
          Value: !Ref App
        - Key: Owner
          Value: !Ref Owner

  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service: ecs-tasks.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
      Tags:
        - Key: App
          Value: !Ref App
        - Key: Owner
          Value: !Ref Owner

  ################################################################################
  # SERVICES
  ################################################################################
  Zookeeper:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplatesBucket}/zookeeper/template.yaml
      Parameters:
        App: !Ref App
        Owner: !Ref Owner
        AvailabilityZonesCount: !Ref AvailabilityZonesCount
        TaskExecutionRole: !Ref TaskExecutionRole
        VPC: !GetAtt VPC.Outputs.VPC
        PrivateSubnets: !GetAtt VPC.Outputs.PrivateSubnets
        CloudMap: !Ref CloudMap
        CloudWatchLogsGroup: !Ref CloudWatchLogsGroup
        Cluster: !GetAtt CLUSTER.Outputs.Cluster

  Kafka:
    Type: AWS::CloudFormation::Stack
    DependsOn: Zookeeper
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplatesBucket}/kafka/kafka.yaml
      Parameters:
        App: !Ref App
        Owner: !Ref Owner
        AvailabilityZonesCount: !Ref AvailabilityZonesCount
        TaskExecutionRole: !Ref TaskExecutionRole
        VPC: !GetAtt VPC.Outputs.VPC
        PrivateSubnets: !GetAtt VPC.Outputs.PrivateSubnets
        CloudMap: !Ref CloudMap
        CloudWatchLogsGroup: !Ref CloudWatchLogsGroup
        Cluster: !GetAtt CLUSTER.Outputs.Cluster

  SchemaRegistry:
    Type: AWS::CloudFormation::Stack
    DependsOn: Kafka
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplatesBucket}/kafka/schema-registry.yaml
      Parameters:
        App: !Ref App
        Owner: !Ref Owner
        AvailabilityZonesCount: !Ref AvailabilityZonesCount
        TaskExecutionRole: !Ref TaskExecutionRole
        VPC: !GetAtt VPC.Outputs.VPC
        PrivateSubnets: !GetAtt VPC.Outputs.PrivateSubnets
        CloudMap: !Ref CloudMap
        CloudWatchLogsGroup: !Ref CloudWatchLogsGroup
        Cluster: !GetAtt CLUSTER.Outputs.Cluster

  KSQL:
    Type: AWS::CloudFormation::Stack
    DependsOn: SchemaRegistry
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplatesBucket}/kafka/ksql.yaml
      Parameters:
        App: !Ref App
        Owner: !Ref Owner
        AvailabilityZonesCount: !Ref AvailabilityZonesCount
        TaskExecutionRole: !Ref TaskExecutionRole
        VPC: !GetAtt VPC.Outputs.VPC
        PrivateSubnets: !GetAtt VPC.Outputs.PrivateSubnets
        CloudMap: !Ref CloudMap
        CloudWatchLogsGroup: !Ref CloudWatchLogsGroup
        Cluster: !GetAtt CLUSTER.Outputs.Cluster
